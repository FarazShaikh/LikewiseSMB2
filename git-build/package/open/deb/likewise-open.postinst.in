#!/bin/sh

UPGRADEDIR=/var/lib/likewise-upgrade
PKG_ARCH="@MK_HOST_ARCH@"

LOG=/var/log/likewise-open-install.log
TLOG=/tmp/LikewiseOpenTemp.txt

# Display to screen and log file with a blank line between entries.
log()
{
    echo $@
    echo
    echo $@ >> $LOG
    echo >> $LOG
}

# Display to screen and log file with no blank line.
_log()
{
    echo $@
    echo $@ >> $LOG
}

# Display to file.
logfile()
{
    echo $@ >> $LOG
    echo >> $LOG
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file.
run()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err"
        _log `cat $TLOG`
        _log
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# Log only to file.
run_quiet()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
    else
        echo "Error: $@ returned $err  (ignoring and continuing)" >> $LOG
    fi
    cat $TLOG >> $LOG
    echo >> $LOG
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file and then exit.
run_or_fail()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err  (aborting this script)"
        _log `cat $TLOG`
        _log
        rm -f $TLOG > /dev/null 2>&1
        exit 1
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

import_registry_configurations()
{
    REGSHELL='@MK_BINDIR@/lwregshell'

    log 'Importing registry...'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/dcerpcd.reg'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/eventlogd.reg'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/lsassd.reg'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/lwiod.reg'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/lwreg.reg'
    run_or_fail "$REGSHELL" import '@LW_CONFIGDIR@/netlogond.reg'
}

determine_upgrade_type()
{
    PRESERVEDVERSIONFILE="${UPGRADEDIR}/VERSION"

    if [ -f "$PRESERVEDVERSIONFILE" ]; then
        run_or_fail cat "$PRESERVEDVERSIONFILE"
        if [ -n "`grep '^VERSION=5.0' $PRESERVEDVERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log 'Upgrading from Likewise Identity Services Open 5.0'
        elif [ -n "`grep '^VERSION=5.1' $PRESERVEDVERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log 'Upgrading from Likewise Identity Services Open 5.1'
        elif [ -n "`grep '^VERSION=5.2' $PRESERVEDVERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log 'Upgrading from Likewise Identity Services Open 5.2'
        elif [ -n "`grep '^VERSION=5.3' $PRESERVEDVERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log 'Upgrading from Likewise Identity Services Open 5.3'
        elif [ -n "`grep '^VERSION=6.0' $PRESERVEDVERSIONFILE`" ]; then
            UPGRADING_FROM_6_0=1
            log 'Upgrading from Likewise Open 6.0'
        fi
    fi
}

import_5_0123_file()
{
    CONVERT='@MK_BINDIR@/conf2reg'
    REGSHELL='@MK_BINDIR@/lwregshell'

    COMMAND=$1
    SOURCE=$2
    # DEST is not necessary for some commands.
    DEST=$3

    if [ -f "$SOURCE" ]; then
        run_quiet "$CONVERT" "$COMMAND" "$SOURCE" $DEST
        if [ $? -ne 0 ]; then
            log "There was a problem converting $SOURCE. Please file a bug and attach $SOURCE."
            return 1
        fi

        if [ -n "$DEST" -a -f "$DEST" ]; then
            run_quiet "$REGSHELL" import "$DEST"
            if [ $? -ne 0 ]; then
                log "There was a problem converting $SOURCE. Please file a bug and attach $SOURCE and $DEST."
                return 1
            fi
        fi
    fi
    return 0
}

restore_5_0123_configuration()
{
    CONVERT='@MK_BINDIR@/conf2reg'

    if [ -z "$UPGRADING_FROM_5_0123" ]; then
        return 0
    fi

    import_5_0123_file --lsass "${UPGRADEDIR}/lsassd.conf" \
        "${UPGRADEDIR}/lsassd.conf.reg"

    import_5_0123_file --netlogon "${UPGRADEDIR}/netlogon.conf" \
        "${UPGRADEDIR}/netlogon.conf.reg"

    import_5_0123_file --eventlog "${UPGRADEDIR}/eventlogd.conf" \
        "${UPGRADEDIR}/eventlogd.conf.reg"

    import_5_0123_file --pstore-sqlite "${UPGRADEDIR}/pstore.db"
}

relocate_domain_separator()
{
    DomainSeparator=`@MK_BINDIR@/lwregshell list_values '[HKEY_THIS_MACHINE\Services\lsass\Parameters\Providers\ActiveDirectory]' | grep DomainSeparator | sed -e 's/ *[^ ]\+[ ]\+[^ ]\+[ ]\+"\([^ ]*\)"$/\1/'`

    if [ -n "${DomainSeparator}" ]; then
        if [ "$DomainSeparator" = "\\\\" ]; then
            DomainSeparator="\\"
        fi

        run_quiet '@MK_BINDIR@/lwregshell' set_value '[HKEY_THIS_MACHINE\Services\lsass\Parameters]' 'DomainSeparator' "$DomainSeparator"
    fi
}

relocate_space_replacement()
{
    SpaceReplacement=`@MK_BINDIR@/lwregshell list_values '[HKEY_THIS_MACHINE\Services\lsass\Parameters\Providers\ActiveDirectory]' | grep SpaceReplacement | sed -e 's/ *[^ ]\+[ ]\+[^ ]\+[ ]\+"\([^ ]*\)"$/\1/'`

    if [ -n "${SpaceReplacement}" ]; then
        run_quiet '@MK_BINDIR@/lwregshell' set_value '[HKEY_THIS_MACHINE\Services\lsass\Parameters]' 'SpaceReplacement' "$SpaceReplacement"
    fi
}

set_lsass_dependencies()
{
    # Need to get rid of npfs dependency from earlier versions
    run_quiet '@MK_BINDIR@/lwregshell' set_value '[HKEY_THIS_MACHINE\Services\lsass]' 'Dependencies' 'netlogon lwio lwreg rdr'
}

fix_60_registry()
{
    REGSHELL='@MK_BINDIR@/lwregshell'

    if [ -z "$UPGRADING_FROM_6_0" ]; then
        return 0
    fi

    # Migrate pstore entries from default to joined domain
    run '@MK_BINDIR@/regupgr61.sh' --install

    # Migrate some other entries
    relocate_domain_separator
    relocate_space_replacement

    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/dcerpcd.reg"
    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/eventlogd.reg"
    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/lsassd.reg"
    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/lwiod.reg"
    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/lwreg.reg"
    run_or_fail "${REGSHELL}" cleanup "@LW_CONFIGDIR@/netlogond.reg"
}

switch_to_open_provider()
{
    _value='[HKEY_THIS_MACHINE\Services\lsass\Parameters\Providers\ActiveDirectory]'
    _path='@PRIMARY_LIBDIR@/liblsass_auth_provider_ad_open.so'

    run_quiet "@MK_BINDIR@/lwregshell" set_value "$_value" Path "$_path"
}

postinstall()
{
    log "Package: Likewise Open postinstall [configure] begins (`date`)"
    log "Logging all operations to $LOG"

    run_or_fail "@MK_SBINDIR@/lwsmd" --start-as-daemon --loglevel debug

    determine_upgrade_type

    restore_5_0123_configuration

    import_registry_configurations

    fix_60_registry

    set_lsass_dependencies

    switch_to_open_provider

    run_or_fail "@MK_BINDIR@/lwsm" shutdown

    run /usr/sbin/update-rc.d -f lwsmd defaults 17 8
    run /usr/sbin/update-rc.d -f likewise defaults 18 7

    run /usr/sbin/service lwsmd start
    run /usr/sbin/service likewise start

    run "@MK_BINDIR@/domainjoin-cli" configure --enable pam
    run "@MK_BINDIR@/domainjoin-cli" configure --enable nsswitch

    run_quiet rm -rf "${UPGRADEDIR}"

    log "Package: Likewise Open postinstall [configure] finished"
    exit 0
}

case "$1" in
    abort-upgrade)
        ;;

    configure)
        postinstall
        ;;
esac

