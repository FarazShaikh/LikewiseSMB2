/*
 * Copyright (C) Centeris Corporation 2004-2007
 * Copyright (C) Likewise Software 2007
 * All rights reserved.
 *
 * Authors: Krishna Ganugapati (krishnag@likewisesoftware.com)
 *          Sriram Nambakam (snambakam@likewisesoftware.com)
 *
 * Eventlog IDL
 *
 * Permission to use, copy, modify, and distribute these interface
 * definitions for any purpose is hereby granted without fee.
 *
 * This work is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 */
#ifndef __EVENTLOG_IDL__
#define __EVENTLOG_IDL__

[
    uuid(ba209999-0c6c-11d2-97cf-00c04f8eea45),
    pointer_default(unique),
    version(1.0)
]


interface eventlog {

    cpp_quote("#ifndef __EVENTLOG_IDL__")
    cpp_quote("#define __EVENTLOG_IDL__")

    cpp_quote("#ifdef _WIN32")

    cpp_quote("#ifndef TARGET_IS_NT50_OR_LATER")
    cpp_quote("#define TARGET_IS_NT50_OR_LATER TRUE")
    cpp_quote("#else")
    cpp_quote("#if !(TARGET_IS_NT50_OR_LATER)")
    cpp_quote("#undef TARGET_IS_NT50_OR_LATER")
    cpp_quote("#define TARGET_IS_NT50_OR_LATER TRUE")
    cpp_quote("#endif") // false TARGET_IS_NT50_OR_LATER
    cpp_quote("#endif") // undefined TARGET_IS_NT50_OR_LATER

    cpp_quote("#endif") //_WIN32, !_WIN32

    cpp_quote("#ifndef EVENT_LOG_RECORD_DEFINED")
    cpp_quote("#define EVENT_LOG_RECORD_DEFINED 1")
    typedef struct _EVENT_LOG_RECORD 
    {
	unsigned32              dwEventRecordId;
	[unique, string] char * pszEventTableCategoryId;
	[unique, string] char * pszEventType;
	unsigned32              dwEventDateTime;
	[unique, string] char * pszEventSource;
	[unique, string] char * pszEventCategory;
	unsigned32              dwEventSourceId;
	[unique, string] char * pszUser;
	[unique, string] char * pszComputer;
	[unique, string] char * pszDescription;
	[unique, string] char * pszData;
	
    } EVENT_LOG_RECORD, *PEVENT_LOG_RECORD;
    cpp_quote("#endif /* EVENT_LOG_RECORD_DEFINED */")

    cpp_quote("#ifndef EVENT_LOG_HANDLE_DEFINED")
    cpp_quote("#define EVENT_LOG_HANDLE_DEFINED 1")
    typedef struct _EVENT_LOG_HANDLE
    {
	hyper bindingHandle;
	[unique, string] char * pszBindingString;

	unsigned short int bDefaultActive;

	EVENT_LOG_RECORD defaultEventLogRecord;

    } EVENT_LOG_HANDLE, *PEVENT_LOG_HANDLE;
    cpp_quote("#endif")


    long
    RpcLWIOpenEventLog(
	[in] handle_t bindingHandle,
	[in, string] char * szServerName,
	[in, string] char * szEventLog
	);

    long
    RpcLWICloseEventLog(
	[in] handle_t bindingHandle
	);
    
    long
    RpcLWIEventLogCount(
	[in] handle_t bindingHandle,
	[in, string] char * sqlFilter,
	[out] unsigned32 * pdwNumMatched
	);

    long
    RpcLWIReadEventLog(
	[in] handle_t bindingHandle,
	[in] unsigned32 dwIndex,
        [in] unsigned32 nRecordsPerPage,
	[in, string] char* sqlFilter,
	[out] unsigned32 * pdwNumReturned,
	[out, size_is(nRecordsPerPage), length_is(*pdwNumReturned)] EVENT_LOG_RECORD* eventRecords
	);

    long
    RpcLWIWriteEventLogRecords(
        [in] handle_t bindingHandle,
	[in] unsigned32 cRecords,
  	[in, size_is(cRecords)] EVENT_LOG_RECORD* pEventRecords 
	);

    long
    RpcLWIClearEventLog(
        [in] handle_t bindingHandle
	);

    long
    RpcLWIDeleteFromEventLog(
        [in] handle_t bindingHandle,
	[in, string] char* sqlFilter
	);

    cpp_quote("#endif /* __EVENTLOG_IDL__ */")
}

#endif /* __EVENTLOG_IDL__ */

